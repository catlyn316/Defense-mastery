-- 基本服務與玩家
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")

-- 儲存自定義名稱
local savedName = "catlyn"

-- 全域變數
local isAutoAbilityEnabled = false
local autoAbilityLoop = nil
local isAutoAttackEnabled = false
local autoAttackLoop = nil
local isHelpModeEnabled = false
local helpModeLoop = nil
local currentAbilityMode = "普通"

-- 自訂位置變數
local customStartPosition = nil
local customStartCFrame = nil
local customEndPosition = nil
local customEndCFrame = nil

-- 尋找25單位內的玩家
local function findPlayerWithin25Units()
    local localCharacter = LocalPlayer.Character
    
    if not localCharacter or not localCharacter:FindFirstChild("HumanoidRootPart") then
        return nil
    end
    
    local localPosition = localCharacter.HumanoidRootPart.Position
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - localPosition).Magnitude
            if distance <= 25 then
                return player
            end
        end
    end
    
    return nil
end

-- 尋找10單位內的玩家
local function findPlayerWithin10Units()
    local localCharacter = LocalPlayer.Character
    
    if not localCharacter or not localCharacter:FindFirstChild("HumanoidRootPart") then
        return nil
    end
    
    local localPosition = localCharacter.HumanoidRootPart.Position
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - localPosition).Magnitude
            if distance <= 10 then
                return player
            end
        end
    end
    
    return nil
end

-- 檢查玩家是否處於ragdoll狀態
local function isPlayerRagdolled(player)
    if not player.Character then return false end
    
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if not humanoid then return false end
    
    -- 檢查PlatformStand狀態（通常用於ragdoll）
    return humanoid.PlatformStand == true
end

-- 修改名稱標籤的函數
local function changeNametag()
    local playerName = LocalPlayer.Name
    local character = workspace:FindFirstChild(playerName)
    if character then
        local head = character:FindFirstChild("Head")
        if head then
            local nametagFolder = head:FindFirstChild("Nametag")
            if nametagFolder then
                local labels = nametagFolder:FindFirstChild("Labels")
                if labels then
                    local topLabel = labels:FindFirstChild("TopLabel")
                    if topLabel then
                        topLabel.Text = savedName
                    end
                end
            end
        end
    end
end

-- 初次執行修改名稱
changeNametag()

-- 監聽角色重生事件，重生後重新應用名稱
LocalPlayer.CharacterAdded:Connect(function(character)
    character:WaitForChild("Head", 10)
    wait(0.5)
    changeNametag()
end)

-- GUI 主體
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "BarrierHub"

-- 主框架樣式
local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 450, 0, 350)
Frame.Position = UDim2.new(0.5, -225, 0.5, -175)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true

-- 添加漸層效果
local gradient = Instance.new("UIGradient", Frame)
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 25, 35)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 35, 50))
}
gradient.Rotation = 45

-- 添加外發光效果
local stroke = Instance.new("UIStroke", Frame)
stroke.Color = Color3.fromRGB(100, 150, 255)
stroke.Thickness = 2
stroke.Transparency = 0.5

Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 15)

-- 標題樣式
local Title = Instance.new("TextLabel", Frame)
Title.Size = UDim2.new(1, -80, 0, 50)
Title.Position = UDim2.new(0, 15, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "🔰 屏障 🔰"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 22
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextXAlignment = Enum.TextXAlignment.Left

-- 添加標題發光效果
local titleStroke = Instance.new("UIStroke", Title)
titleStroke.Color = Color3.fromRGB(100, 150, 255)
titleStroke.Thickness = 1
titleStroke.Transparency = 0.3

-- 關閉按鈕樣式和功能
local Close = Instance.new("TextButton", Frame)
Close.Size = UDim2.new(0, 35, 0, 35)
Close.Position = UDim2.new(1, -40, 0, 8)
Close.Text = "x"
Close.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
Close.TextColor3 = Color3.fromRGB(255, 255, 255)
Close.Font = Enum.Font.GothamBold
Close.TextSize = 18
Close.BorderSizePixel = 0

-- 添加關閉按鈕效果
local closeGradient = Instance.new("UIGradient", Close)
closeGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(220, 60, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(180, 40, 40))
}

Instance.new("UICorner", Close).CornerRadius = UDim.new(0, 8)

-- 關閉按鈕功能
Close.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
    _G.barrierHubLoaded = false
end)

-- 最小化按鈕樣式
local Minimize = Instance.new("TextButton", Frame)
Minimize.Size = UDim2.new(0, 35, 0, 35)
Minimize.Position = UDim2.new(1, -80, 0, 8)
Minimize.Text = "─"
Minimize.BackgroundColor3 = Color3.fromRGB(100, 100, 120)
Minimize.TextColor3 = Color3.fromRGB(255, 255, 255)
Minimize.Font = Enum.Font.GothamBold
Minimize.TextSize = 16
Minimize.BorderSizePixel = 0

local minimizeGradient = Instance.new("UIGradient", Minimize)
minimizeGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 100, 120)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 80, 100))
}

Instance.new("UICorner", Minimize).CornerRadius = UDim.new(0, 8)

-- 側邊欄為可滾動
local SideBar = Instance.new("ScrollingFrame", Frame)
SideBar.Size = UDim2.new(0, 130, 1, -55)
SideBar.Position = UDim2.new(0, 5, 0, 50)
SideBar.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
SideBar.BorderSizePixel = 0
SideBar.ScrollBarThickness = 6
SideBar.CanvasSize = UDim2.new(0, 0, 0, 200)
SideBar.AutomaticCanvasSize = Enum.AutomaticSize.Y
SideBar.ScrollingDirection = Enum.ScrollingDirection.Y

-- 添加側邊欄樣式
local sidebarGradient = Instance.new("UIGradient", SideBar)
sidebarGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(35, 35, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(45, 45, 65))
}

Instance.new("UICorner", SideBar).CornerRadius = UDim.new(0, 10)

-- 添加UIListLayout到側邊欄
local sidebarLayout = Instance.new("UIListLayout", SideBar)
sidebarLayout.Padding = UDim.new(0, 8)
sidebarLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

-- 內容區域
local Content = Instance.new("Frame", Frame)
Content.Size = UDim2.new(1, -145, 1, -55)
Content.Position = UDim2.new(0, 140, 0, 50)
Content.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
Content.BorderSizePixel = 0

local contentGradient = Instance.new("UIGradient", Content)
contentGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 75))
}

Instance.new("UICorner", Content).CornerRadius = UDim.new(0, 10)

-- 縮小功能
local isMinimized = false
local fullSize = UDim2.new(0, 450, 0, 350)
local miniSize = UDim2.new(0, 450, 0, 50)

Minimize.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    SideBar.Visible = not isMinimized
    Content.Visible = not isMinimized
    Frame.Size = isMinimized and miniSize or fullSize
end)

-- 創建分區按鈕的函數
local function createSectionButton(text, order, parent)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0, 120, 0, 45)
    btn.Text = text
    btn.BackgroundColor3 = Color3.fromRGB(85, 85, 105)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.TextTransparency = 0
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 16
    btn.BorderSizePixel = 0
    
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 10)
    
    local btnStroke = Instance.new("UIStroke", btn)
    btnStroke.Color = Color3.fromRGB(150, 180, 255)
    btnStroke.Thickness = 1
    btnStroke.Transparency = 0.6
    
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(105, 105, 125)
        btnStroke.Transparency = 0.3
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(85, 85, 105)
        btnStroke.Transparency = 0.6
    end)
    
    return btn
end

-- 創建唯一分區按鈕
local Section1 = createSectionButton("🔰", 1, SideBar)

-- 主要內容區域
local MainScroll = Instance.new("ScrollingFrame", Content)
MainScroll.Size = UDim2.new(1, 0, 1, 0)
MainScroll.CanvasSize = UDim2.new(0, 0, 0, 300)
MainScroll.ScrollBarThickness = 6
MainScroll.BackgroundTransparency = 1
MainScroll.Visible = true
MainScroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
MainScroll.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
MainScroll.ScrollingDirection = Enum.ScrollingDirection.Y

-- 自動使用能力下拉選單按鈕
local autoAbilityDropdownBtn = Instance.new("TextButton", MainScroll)
autoAbilityDropdownBtn.Size = UDim2.new(0, 180, 0, 35)
autoAbilityDropdownBtn.Position = UDim2.new(0.5, -90, 0, 10)
autoAbilityDropdownBtn.Text = "普通 ▼"
autoAbilityDropdownBtn.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
autoAbilityDropdownBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
autoAbilityDropdownBtn.TextSize = 16
autoAbilityDropdownBtn.Font = Enum.Font.GothamBold
autoAbilityDropdownBtn.BorderSizePixel = 0

Instance.new("UICorner", autoAbilityDropdownBtn).CornerRadius = UDim.new(0, 8)

local autoAbilityDropdownStroke = Instance.new("UIStroke", autoAbilityDropdownBtn)
autoAbilityDropdownStroke.Color = Color3.fromRGB(120, 170, 255)
autoAbilityDropdownStroke.Thickness = 1
autoAbilityDropdownStroke.Transparency = 0.6

-- 自動使用能力下拉菜單
local autoAbilityDropdownMenu = Instance.new("Frame", MainScroll)
autoAbilityDropdownMenu.Size = UDim2.new(0, 180, 0, 70)
autoAbilityDropdownMenu.Position = UDim2.new(0.5, -90, 0, 45)
autoAbilityDropdownMenu.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
autoAbilityDropdownMenu.BorderSizePixel = 0
autoAbilityDropdownMenu.Visible = false

Instance.new("UICorner", autoAbilityDropdownMenu).CornerRadius = UDim.new(0, 8)

local autoAbilityMenuStroke = Instance.new("UIStroke", autoAbilityDropdownMenu)
autoAbilityMenuStroke.Color = Color3.fromRGB(120, 170, 255)
autoAbilityMenuStroke.Thickness = 1
autoAbilityMenuStroke.Transparency = 0.6

-- 自動使用能力下拉選項1
local autoAbilityOption1 = Instance.new("TextButton", autoAbilityDropdownMenu)
autoAbilityOption1.Size = UDim2.new(1, 0, 0, 35)
autoAbilityOption1.Position = UDim2.new(0, 0, 0, 0)
autoAbilityOption1.Text = "普通"
autoAbilityOption1.BackgroundColor3 = Color3.fromRGB(60, 60, 85)
autoAbilityOption1.TextColor3 = Color3.fromRGB(255, 255, 255)
autoAbilityOption1.TextSize = 14
autoAbilityOption1.Font = Enum.Font.Gotham
autoAbilityOption1.BorderSizePixel = 0

-- 自動使用能力下拉選項2
local autoAbilityOption2 = Instance.new("TextButton", autoAbilityDropdownMenu)
autoAbilityOption2.Size = UDim2.new(1, 0, 0, 35)
autoAbilityOption2.Position = UDim2.new(0, 0, 0, 35)
autoAbilityOption2.Text = "自訂位置"
autoAbilityOption2.BackgroundColor3 = Color3.fromRGB(60, 60, 85)
autoAbilityOption2.TextColor3 = Color3.fromRGB(255, 255, 255)
autoAbilityOption2.TextSize = 14
autoAbilityOption2.Font = Enum.Font.Gotham
autoAbilityOption2.BorderSizePixel = 0

-- 自動使用能力開關按鈕
local autoAbilityBtn = Instance.new("TextButton", MainScroll)
autoAbilityBtn.Size = UDim2.new(0, 180, 0, 35)
autoAbilityBtn.Position = UDim2.new(0.5, -90, 0, 55)
autoAbilityBtn.Text = "自動使用能力: 關"
autoAbilityBtn.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
autoAbilityBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
autoAbilityBtn.TextSize = 16
autoAbilityBtn.Font = Enum.Font.GothamBold
autoAbilityBtn.BorderSizePixel = 0

Instance.new("UICorner", autoAbilityBtn).CornerRadius = UDim.new(0, 8)

local abilityBtnStroke = Instance.new("UIStroke", autoAbilityBtn)
abilityBtnStroke.Color = Color3.fromRGB(120, 170, 255)
abilityBtnStroke.Thickness = 1
abilityBtnStroke.Transparency = 0.6

-- 自動攻擊按鈕
local autoAttackBtn = Instance.new("TextButton", MainScroll)
autoAttackBtn.Size = UDim2.new(0, 180, 0, 35)
autoAttackBtn.Position = UDim2.new(0.5, -90, 0, 100)
autoAttackBtn.Text = "自動攻擊: 關"
autoAttackBtn.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
autoAttackBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
autoAttackBtn.TextSize = 16
autoAttackBtn.Font = Enum.Font.GothamBold
autoAttackBtn.BorderSizePixel = 0

Instance.new("UICorner", autoAttackBtn).CornerRadius = UDim.new(0, 8)

local attackBtnStroke = Instance.new("UIStroke", autoAttackBtn)
attackBtnStroke.Color = Color3.fromRGB(120, 170, 255)
attackBtnStroke.Thickness = 1
attackBtnStroke.Transparency = 0.6

-- 輸入框
local playerInput = Instance.new("TextBox", MainScroll)
playerInput.Size = UDim2.new(0, 180, 0, 35)
playerInput.Position = UDim2.new(0.5, -90, 0, 145)
playerInput.PlaceholderText = "輸入玩家名稱"
playerInput.Text = ""
playerInput.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
playerInput.TextColor3 = Color3.fromRGB(255, 255, 255)
playerInput.PlaceholderColor3 = Color3.fromRGB(180, 180, 180)
playerInput.TextSize = 14
playerInput.Font = Enum.Font.Gotham
playerInput.BorderSizePixel = 0

Instance.new("UICorner", playerInput).CornerRadius = UDim.new(0, 8)

local inputStroke = Instance.new("UIStroke", playerInput)
inputStroke.Color = Color3.fromRGB(120, 170, 255)
inputStroke.Thickness = 1
inputStroke.Transparency = 0.6

-- 幫助模式按鈕
local helpModeBtn = Instance.new("TextButton", MainScroll)
helpModeBtn.Size = UDim2.new(0, 180, 0, 35)
helpModeBtn.Position = UDim2.new(0.5, -90, 0, 190)
helpModeBtn.Text = "幫助模式: 關"
helpModeBtn.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
helpModeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
helpModeBtn.TextSize = 16
helpModeBtn.Font = Enum.Font.GothamBold
helpModeBtn.BorderSizePixel = 0

Instance.new("UICorner", helpModeBtn).CornerRadius = UDim.new(0, 8)

local helpBtnStroke = Instance.new("UIStroke", helpModeBtn)
helpBtnStroke.Color = Color3.fromRGB(120, 170, 255)
helpBtnStroke.Thickness = 1
helpBtnStroke.Transparency = 0.6

-- 創建補間動畫函數
local function animateButtonPosition(button, targetPosition, duration)
    local tweenInfo = TweenInfo.new(
        duration or 0.3,
        Enum.EasingStyle.Quart,
        Enum.EasingDirection.Out
    )
    local tween = TweenService:Create(button, tweenInfo, {Position = targetPosition})
    tween:Play()
    return tween
end

-- 自動使用能力下拉選單功能
autoAbilityDropdownBtn.MouseButton1Click:Connect(function()
    -- 关闭帮助模式下拉选单
    if helpModeDropdownMenu.Visible then
        helpModeDropdownMenu.Visible = false
        animateButtonPosition(helpModeBtn, UDim2.new(0.5, -90, 0, 280))
    end
    
    autoAbilityDropdownMenu.Visible = not autoAbilityDropdownMenu.Visible
    
    if autoAbilityDropdownMenu.Visible then
        -- 選單展開時，將其他按鈕向下移動
        animateButtonPosition(autoAbilityBtn, UDim2.new(0.5, -90, 0, 125))
        animateButtonPosition(autoAttackBtn, UDim2.new(0.5, -90, 0, 170))
        animateButtonPosition(playerInput, UDim2.new(0.5, -90, 0, 215))
        animateButtonPosition(helpModeBtn, UDim2.new(0.5, -90, 0, 260))
    else
        -- 選單關閉時，將其他按鈕移回原位
        animateButtonPosition(autoAbilityBtn, UDim2.new(0.5, -90, 0, 55))
        animateButtonPosition(autoAttackBtn, UDim2.new(0.5, -90, 0, 100))
        animateButtonPosition(playerInput, UDim2.new(0.5, -90, 0, 145))
        animateButtonPosition(helpModeBtn, UDim2.new(0.5, -90, 0, 190))
    end
end)

autoAbilityOption1.MouseButton1Click:Connect(function()
    currentAbilityMode = "普通"
    autoAbilityDropdownBtn.Text = "普通 ▼"
    autoAbilityDropdownMenu.Visible = false
    -- 選單關閉時移回按鈕
    animateButtonPosition(autoAbilityBtn, UDim2.new(0.5, -90, 0, 55))
    animateButtonPosition(autoAttackBtn, UDim2.new(0.5, -90, 0, 100))
    animateButtonPosition(playerInput, UDim2.new(0.5, -90, 0, 145))
    animateButtonPosition(helpModeBtn, UDim2.new(0.5, -90, 0, 190))
end)

autoAbilityOption2.MouseButton1Click:Connect(function()
    currentAbilityMode = "自訂位置"
    autoAbilityDropdownBtn.Text = "自訂位置 ▼"
    autoAbilityDropdownMenu.Visible = false
    -- 選單關閉時移回按鈕
    animateButtonPosition(autoAbilityBtn, UDim2.new(0.5, -90, 0, 55))
    animateButtonPosition(autoAttackBtn, UDim2.new(0.5, -90, 0, 100))
    animateButtonPosition(playerInput, UDim2.new(0.5, -90, 0, 145))
    animateButtonPosition(helpModeBtn, UDim2.new(0.5, -90, 0, 190))
end)

-- 自動使用能力功能
autoAbilityBtn.MouseButton1Click:Connect(function()
    isAutoAbilityEnabled = not isAutoAbilityEnabled
    autoAbilityBtn.Text = isAutoAbilityEnabled and "自動使用能力: 開" or "自動使用能力: 關"
    
    if isAutoAbilityEnabled then
        -- 如果是自訂位置模式，記錄當前位置
        if currentAbilityMode == "自訂位置" then
            local character = LocalPlayer.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                customStartPosition = character.HumanoidRootPart.Position
                customStartCFrame = character.HumanoidRootPart.CFrame
            end
        end
        
        autoAbilityLoop = task.spawn(function()
            while isAutoAbilityEnabled do
                -- 使用屏障能力
                local args = {
                    [1] = 1
                }
                game:GetService("ReplicatedStorage").Barrier:FireServer(unpack(args))
                
                if currentAbilityMode == "普通" then
                    -- 普通模式：等25秒後再執行一次
                    task.wait(25)
                    if isAutoAbilityEnabled then
                        local args2 = {
                            [1] = 1
                        }
                        game:GetService("ReplicatedStorage").Barrier:FireServer(unpack(args2))
                    end
                elseif currentAbilityMode == "自訂位置" then
                    -- 自訂位置模式：等25秒後記錄結束位置，移動到開始位置再執行，然後回到結束位置
                    task.wait(25)
                    if isAutoAbilityEnabled then
                        local character = LocalPlayer.Character
                        if character and character:FindFirstChild("HumanoidRootPart") then
                            -- 記錄25秒後的位置和方向
                            customEndPosition = character.HumanoidRootPart.Position
                            customEndCFrame = character.HumanoidRootPart.CFrame
                            
                            -- 移動到開始位置
                            if customStartCFrame then
                                character.HumanoidRootPart.CFrame = customStartCFrame
                                
                                -- 再次使用屏障能力
                                local args3 = {
                                    [1] = 1
                                }
                                game:GetService("ReplicatedStorage").Barrier:FireServer(unpack(args3))
                                
                                -- 等0.1秒後回到原本位置
                                task.wait(0.1)
                                if customEndCFrame then
                                    character.HumanoidRootPart.CFrame = customEndCFrame
                                end
                            end
                        end
                    end
                end
                
                task.wait(1)
            end
        end)
    elseif autoAbilityLoop then
        task.cancel(autoAbilityLoop)
        autoAbilityLoop = nil
    end
end)

-- 自動攻擊功能
autoAttackBtn.MouseButton1Click:Connect(function()
    isAutoAttackEnabled = not isAutoAttackEnabled
    autoAttackBtn.Text = isAutoAttackEnabled and "自動攻擊: 開" or "自動攻擊: 關"
    
    if isAutoAttackEnabled then
        autoAttackLoop = task.spawn(function()
            while isAutoAttackEnabled do
                local nearbyPlayer = findPlayerWithin25Units()
                if nearbyPlayer and nearbyPlayer.Character and nearbyPlayer.Character:FindFirstChild("Right Arm") then
                    local args = {
                        [1] = nearbyPlayer.Character:FindFirstChild("Right Arm")
                    }
                    game:GetService("ReplicatedStorage").DefenseHit:FireServer(unpack(args))
                end
                task.wait(1)
            end
        end)
    elseif autoAttackLoop then
        task.cancel(autoAttackLoop)
        autoAttackLoop = nil
    end
end)

-- 修改標題
Title.Text = "🔰 屏障 🔰"

-- 修改全域變數
local currentHelpMode = "被打後重置"


-- 創建幫助模式下拉選單按鈕
local helpModeDropdownBtn = Instance.new("TextButton", MainScroll)
helpModeDropdownBtn.Size = UDim2.new(0, 180, 0, 35)
helpModeDropdownBtn.Position = UDim2.new(0.5, -90, 0, 235)
helpModeDropdownBtn.Text = "被打後重置 ▼"
helpModeDropdownBtn.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
helpModeDropdownBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
helpModeDropdownBtn.TextSize = 16
helpModeDropdownBtn.Font = Enum.Font.GothamBold
helpModeDropdownBtn.BorderSizePixel = 0

Instance.new("UICorner", helpModeDropdownBtn).CornerRadius = UDim.new(0, 8)

local helpModeDropdownStroke = Instance.new("UIStroke", helpModeDropdownBtn)
helpModeDropdownStroke.Color = Color3.fromRGB(120, 170, 255)
helpModeDropdownStroke.Thickness = 1
helpModeDropdownStroke.Transparency = 0.6

-- 創建幫助模式下拉菜單
local helpModeDropdownMenu = Instance.new("Frame", MainScroll)
helpModeDropdownMenu.Size = UDim2.new(0, 180, 0, 70)
helpModeDropdownMenu.Position = UDim2.new(0.5, -90, 0, 270)
helpModeDropdownMenu.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
helpModeDropdownMenu.BorderSizePixel = 0
helpModeDropdownMenu.Visible = false

Instance.new("UICorner", helpModeDropdownMenu).CornerRadius = UDim.new(0, 8)

local helpModeMenuStroke = Instance.new("UIStroke", helpModeDropdownMenu)
helpModeMenuStroke.Color = Color3.fromRGB(120, 170, 255)
helpModeMenuStroke.Thickness = 1
helpModeMenuStroke.Transparency = 0.6

-- 幫助模式下拉選項1
local helpModeOption1 = Instance.new("TextButton", helpModeDropdownMenu)
helpModeOption1.Size = UDim2.new(1, 0, 0, 35)
helpModeOption1.Position = UDim2.new(0, 0, 0, 0)
helpModeOption1.Text = "被打後重置"
helpModeOption1.BackgroundColor3 = Color3.fromRGB(60, 60, 85)
helpModeOption1.TextColor3 = Color3.fromRGB(255, 255, 255)
helpModeOption1.TextSize = 14
helpModeOption1.Font = Enum.Font.Gotham
helpModeOption1.BorderSizePixel = 0

-- 幫助模式下拉選項2
local helpModeOption2 = Instance.new("TextButton", helpModeDropdownMenu)
helpModeOption2.Size = UDim2.new(1, 0, 0, 35)
helpModeOption2.Position = UDim2.new(0, 0, 0, 35)
helpModeOption2.Text = "被打後不重置"
helpModeOption2.BackgroundColor3 = Color3.fromRGB(60, 60, 85)
helpModeOption2.TextColor3 = Color3.fromRGB(255, 255, 255)
helpModeOption2.TextSize = 14
helpModeOption2.Font = Enum.Font.Gotham
helpModeOption2.BorderSizePixel = 0

-- 調整幫助模式按鈕位置
helpModeBtn.Position = UDim2.new(0.5, -90, 0, 280)

-- 幫助模式下拉選單功能
helpModeDropdownBtn.MouseButton1Click:Connect(function()
    -- 关闭自动使用能力下拉选单
    if autoAbilityDropdownMenu.Visible then
        autoAbilityDropdownMenu.Visible = false
        -- 将按钮移回原位
        animateButtonPosition(autoAbilityBtn, UDim2.new(0.5, -90, 0, 55))
        animateButtonPosition(autoAttackBtn, UDim2.new(0.5, -90, 0, 100))
        animateButtonPosition(playerInput, UDim2.new(0.5, -90, 0, 145))
        animateButtonPosition(helpModeBtn, UDim2.new(0.5, -90, 0, 190))
    end
    
    helpModeDropdownMenu.Visible = not helpModeDropdownMenu.Visible
    
    if helpModeDropdownMenu.Visible then
        -- 選單展開時，將幫助模式按鈕向下移動
        animateButtonPosition(helpModeBtn, UDim2.new(0.5, -90, 0, 350))
    else
        -- 選單關閉時，將幫助模式按鈕移回原位
        animateButtonPosition(helpModeBtn, UDim2.new(0.5, -90, 0, 280))
    end
end)

helpModeOption2.MouseButton1Click:Connect(function()
    currentHelpMode = "被打後不重置"
    helpModeDropdownBtn.Text = "被打後不重置 ▼"
    helpModeDropdownMenu.Visible = false
    animateButtonPosition(helpModeBtn, UDim2.new(0.5, -90, 0, 280))
end)

-- 幫助模式功能
helpModeBtn.MouseButton1Click:Connect(function()
    isHelpModeEnabled = not isHelpModeEnabled
    helpModeBtn.Text = isHelpModeEnabled and "幫助模式: 開" or "幫助模式: 關"
    
    if isHelpModeEnabled then
        local targetName = playerInput.Text
        if targetName == "" then
            helpModeBtn.Text = "幫助模式: 關"
            isHelpModeEnabled = false
            return
        end
        
        helpModeLoop = task.spawn(function()
            while isHelpModeEnabled do
                local character = LocalPlayer.Character
                if not character then
                    character = LocalPlayer.CharacterAdded:Wait()
                end
                
                local humanoidRootPart = character:WaitForChild("HumanoidRootPart", 10)
                local humanoid = character:WaitForChild("Humanoid", 10)
                
                if not humanoidRootPart or not humanoid then
                    task.wait(0.5)
                    continue
                end
                
                if humanoid.Health <= 0 then
                    task.wait(0.3)
                    continue
                end
                
                if currentHelpMode == "被打後重置" then
                    -- 被打後重置模式 - 使用範本邏輯
                    pcall(function()
                        -- 傳送到 Lobby.Teleport1
                        local teleport1 = Workspace.Lobby:FindFirstChild("Teleport1")
                        if teleport1 and isHelpModeEnabled then
                            humanoidRootPart.CFrame = teleport1.CFrame
                            task.wait(0.3)
                        end
                        
                        -- 持續跟隨目標玩家
                        local targetPlayer = Players:FindFirstChild(targetName)
                        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") and isHelpModeEnabled then
                            local playerWorkspaceFolder = Workspace:FindFirstChild(LocalPlayer.Name)
                            local lastUpdateTime = tick()
                            
                            -- 持續移動直到檢測到LastSlappedBy
                            while isHelpModeEnabled and character.Parent and humanoid.Health > 0 and playerWorkspaceFolder do
                                
                                -- 檢查是否被目標玩家打中
                                local lastSlappedBy = playerWorkspaceFolder:FindFirstChild("LastSlappedBy")
                                if lastSlappedBy and lastSlappedBy.Value == targetName then
                                    task.wait(0.5) -- 等待0.5秒
                                    break -- 跳出循環進行重置
                                end
                                
                                local currentTime = tick()
                                if currentTime - lastUpdateTime < 0.2 then
                                    task.wait(0.1)
                                    continue
                                end
                                lastUpdateTime = currentTime
                                
                                if not (targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")) then
                                    break
                                end
                                
                                pcall(function()
                                    local targetRoot = targetPlayer.Character.HumanoidRootPart
                                    local targetPos = targetRoot.Position
                                    local targetLookDirection = targetRoot.CFrame.LookVector
                                    
                                    local newPos = targetPos + (targetLookDirection * 5) + Vector3.new(0, 2, 0)
                                    
                                    if (humanoidRootPart.Position - newPos).Magnitude > 1 then
                                        humanoidRootPart.CFrame = CFrame.new(newPos, newPos + targetLookDirection)
                                    end
                                end)
                                
                                task.wait(0.1)
                            end
                            
                            -- 檢查LastSlappedBy並重置
                            if isHelpModeEnabled and playerWorkspaceFolder then
                                local lastSlappedBy = playerWorkspaceFolder:FindFirstChild("LastSlappedBy")
                                if lastSlappedBy and lastSlappedBy.Value == targetName then
                                    
                                    -- 安全傳送到指定坐標
                                    pcall(function()
                                        if humanoidRootPart and humanoidRootPart.Parent then
                                            humanoidRootPart.CFrame = CFrame.new(263, 13, 197)
                                        end
                                    end)
                                    
                                    task.wait(0.2)
                                    
                                    -- 安全重置
                                    pcall(function()
                                        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                                            LocalPlayer.Character.Humanoid:TakeDamage(LocalPlayer.Character.Humanoid.MaxHealth)
                                        end
                                    end)
                                    
                                    -- 等待重置完成和新角色載入
                                    local resetStartTime = tick()
                                    repeat
                                        task.wait(0.2)
                                        if tick() - resetStartTime > 3 then
                                            break
                                        end
                                    until not LocalPlayer.Character or LocalPlayer.Character.Humanoid.Health <= 0
                                    
                                    -- 等待新角色
                                    local newCharacter = nil
                                    local waitStartTime = tick()
                                    repeat
                                        task.wait(0.2)
                                        newCharacter = LocalPlayer.Character
                                        if tick() - waitStartTime > 3 then
                                            break
                                        end
                                    until newCharacter and newCharacter:FindFirstChild("HumanoidRootPart") and 
                                          newCharacter:FindFirstChild("Humanoid") and newCharacter.Humanoid.Health > 0
                                    
                                    task.wait(0.3)
                                end
                            end
                        end
                    end)
                    
                elseif currentHelpMode == "被打後不重置" then
                    -- 被打後不重置模式 - 持續移動到當前位置直到解除
                    pcall(function()
                        local targetPlayer = Players:FindFirstChild(targetName)
                        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") and isHelpModeEnabled then
                            
                            while isHelpModeEnabled and character.Parent and humanoid.Health > 0 do
                                
                                if not (targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")) then
                                    break
                                end
                                
                                pcall(function()
                                    local targetRoot = targetPlayer.Character.HumanoidRootPart
                                    local targetPos = targetRoot.Position
                                    local targetLookDirection = targetRoot.CFrame.LookVector
                                    
                                    local newPos = targetPos + (targetLookDirection * 5) + Vector3.new(0, 2, 0)
                                    
                                    humanoidRootPart.CFrame = CFrame.new(newPos, newPos + targetLookDirection)
                                end)
                                
                                task.wait(0.1)
                            end
                        end
                    end)
                end
                
                if isHelpModeEnabled then
                    task.wait(1)
                end
            end
        end)
    elseif helpModeLoop then
        task.cancel(helpModeLoop)
        helpModeLoop = nil
    end
end)
